-- 0) 트랜잭션 (선택)
BEGIN;

-- 1) meetings 테이블 신설 (날짜=PK)
CREATE TABLE IF NOT EXISTS public.meetings
(
    meeting_date DATE PRIMARY KEY,
    created_at   TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- 2) attendance_records 구조 보강/정렬
-- 2-1) id 컬럼(IDENTITY) 없으면 추가
DO
$$
    BEGIN
        IF NOT EXISTS (SELECT 1
                       FROM information_schema.columns
                       WHERE table_schema = 'public'
                         AND table_name = 'attendance_records'
                         AND column_name = 'id') THEN
            ALTER TABLE public.attendance_records
                ADD COLUMN id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY;
        END IF;
    END
$$;

-- 2-2) meeting_date 컬럼 추가 또는 date→meeting_date로 리네임
DO
$$
    BEGIN
        IF EXISTS (SELECT 1
                   FROM information_schema.columns
                   WHERE table_schema = 'public'
                     AND table_name = 'attendance_records'
                     AND column_name = 'date') AND NOT EXISTS (SELECT 1
                                                               FROM information_schema.columns
                                                               WHERE table_schema = 'public'
                                                                 AND table_name = 'attendance_records'
                                                                 AND column_name = 'meeting_date') THEN
            ALTER TABLE public.attendance_records
                RENAME COLUMN "date" TO meeting_date;
        END IF;

        IF NOT EXISTS (SELECT 1
                       FROM information_schema.columns
                       WHERE table_schema = 'public'
                         AND table_name = 'attendance_records'
                         AND column_name = 'meeting_date') THEN
            ALTER TABLE public.attendance_records
                ADD COLUMN meeting_date DATE NOT NULL DEFAULT CURRENT_DATE;
            -- 필요 시 DEFAULT 제거
            ALTER TABLE public.attendance_records
                ALTER COLUMN meeting_date DROP DEFAULT;
        END IF;
    END
$$;

-- 2-3) present 컬럼 없으면 추가
DO
$$
    BEGIN
        IF NOT EXISTS (SELECT 1
                       FROM information_schema.columns
                       WHERE table_schema = 'public'
                         AND table_name = 'attendance_records'
                         AND column_name = 'present') THEN
            ALTER TABLE public.attendance_records
                ADD COLUMN present BOOLEAN NOT NULL DEFAULT FALSE;
        END IF;
    END
$$;

-- 2-4) updated_at / updated_by 컬럼 추가
DO
$$
    BEGIN
        IF NOT EXISTS (SELECT 1
                       FROM information_schema.columns
                       WHERE table_schema = 'public'
                         AND table_name = 'attendance_records'
                         AND column_name = 'updated_at') THEN
            ALTER TABLE public.attendance_records
                ADD COLUMN updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW();
        END IF;

        IF NOT EXISTS (SELECT 1
                       FROM information_schema.columns
                       WHERE table_schema = 'public'
                         AND table_name = 'attendance_records'
                         AND column_name = 'updated_by') THEN
            ALTER TABLE public.attendance_records
                ADD COLUMN updated_by BIGINT NULL;
        END IF;
    END
$$;

-- 2-5) user_id FK 보강 (이미 있으면 스킵)
DO
$$
    BEGIN
        IF NOT EXISTS (SELECT 1
                       FROM information_schema.constraint_column_usage
                       WHERE table_name = 'attendance_records'
                         AND constraint_name = 'fk_attendance_user') THEN
            ALTER TABLE public.attendance_records
                ADD CONSTRAINT fk_attendance_user
                    FOREIGN KEY (user_id) REFERENCES public.users (id) ON DELETE CASCADE;
        END IF;
    END
$$;

-- 2-6) meeting_date FK (meetings) 보강
DO
$$
    BEGIN
        IF NOT EXISTS (SELECT 1
                       FROM information_schema.constraint_column_usage
                       WHERE table_name = 'attendance_records'
                         AND constraint_name = 'fk_attendance_meeting') THEN
            ALTER TABLE public.attendance_records
                ADD CONSTRAINT fk_attendance_meeting
                    FOREIGN KEY (meeting_date) REFERENCES public.meetings (meeting_date) ON DELETE CASCADE;
        END IF;
    END
$$;

-- 2-7) UNIQUE(meeting_date, user_id) 재정의
DO
$$
    DECLARE
        c TEXT;
    BEGIN
        FOR c IN
            SELECT conname
            FROM pg_constraint
            WHERE conrelid = 'public.attendance_records'::regclass
              AND contype = 'u'
            LOOP
                EXECUTE format('ALTER TABLE public.attendance_records DROP CONSTRAINT %I', c);
            END LOOP;

        ALTER TABLE public.attendance_records
            ADD CONSTRAINT uq_attendance UNIQUE (meeting_date, user_id);
    END
$$;

-- 3) 인덱스들
DO
$$
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM pg_class WHERE relname = 'idx_attendance_user_date') THEN
            CREATE INDEX idx_attendance_user_date ON public.attendance_records (user_id, meeting_date DESC);
        END IF;

        IF NOT EXISTS (SELECT 1 FROM pg_class WHERE relname = 'idx_attendance_date_only') THEN
            CREATE INDEX idx_attendance_date_only ON public.attendance_records (meeting_date DESC);
        END IF;

        IF NOT EXISTS (SELECT 1 FROM pg_class WHERE relname = 'idx_users_team_role') THEN
            CREATE INDEX idx_users_team_role ON public.users (team, user_role);
        END IF;
    END
$$;

COMMIT;