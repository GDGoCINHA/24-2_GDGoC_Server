plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'inha'
version = '0.0.1-SNAPSHOT'

/* ===== Java Toolchain ===== */
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

/* ===== Configurations ===== */
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

/* ===== Repositories ===== */
repositories {
    mavenCentral()
}

/* ===== Dependencies ===== */
dependencies {
    // --- Spring Boot Starters ---
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // --- DB & JPA Utils ---
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'org.postgresql:postgresql:42.7.3'
    runtimeOnly  'com.h2database:h2'   // 테스트/로컬용 인메모리 DB

    // --- QueryDSL ---
    implementation       'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor  'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor  'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor  'jakarta.persistence:jakarta.persistence-api'

    // --- JWT (JJWT 0.9.x, 레거시 패키지) ---
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // --- AWS (S3) ---
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // --- Flyway (DB Migration) ---
    implementation "org.flywaydb:flyway-core:10.21.0"
    implementation "org.flywaydb:flyway-database-postgresql:10.21.0"

    // --- 환경변수(.env) ---
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    // --- Lombok ---
    compileOnly        'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // --- Test ---
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.6.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly   'org.junit.platform:junit-platform-launcher'
}

/* ===== Tasks ===== */

// 테스트: 프로필과 JUnit 플랫폼 한 곳에서 설정
tasks.test {
    useJUnitPlatform()
    systemProperty "spring.profiles.active", "test"
}

// QueryDSL 생성물 경로 고정
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file("build/generated/sources/annotationProcessor/java/main")
}

